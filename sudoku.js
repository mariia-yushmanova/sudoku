/**
 * Принимает игровое поле в формате строки — как в файле sudoku-puzzles.txt.
 * Возвращает игровое поле после попытки его решить.
 * Договорись со своей командой, в каком формате возвращать этот результат.
 */

//  функция ищет перву попавшуюся чёрточку и возвращает её индекс
function findEmptyField(arr) {
  //переменная для результата
  const result = [];
  // перебор по массивам
  for (let i = 0; i < arr.length; i++) {
    // поиск элемента с чёрточкой и возврат его индекса
    a = arr[i].findIndex((el) => el === "-");

    if (a >= 0) {
      //  тут я беру индекс массива в котором есть чёрточки
      result.push(arr.findIndex((el) => el === arr[i]));
      //  тут я добавляю индекс самой чёрточки
      result.push(a);
      // тут была проверка,что нам возвращает результат в консоль
      // console.log(result);
      return result;
    }
  }
}

function solve(boardString) {}

/**
 * Принимает игровое поле в том формате, в котором его вернули из функции solve.
 * Возвращает булевое значение — решено это игровое поле или нет.
 */
function isSolved(board) {}

/**
 * Принимает игровое поле в том формате, в котором его вернули из функции solve.
 * Возвращает строку с игровым полем для последующего вывода в консоль.
 * Подумай, как симпатичнее сформировать эту строку.
 */
function prettyBoard(board) {}

// Экспортировать функции для использования в другом файле (например, readAndSolve.js).
module.exports = {
  solve,
  isSolved,
  prettyBoard,
};
